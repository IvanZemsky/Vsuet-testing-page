{"version":3,"file":"static/js/544.3c13d331.chunk.js","mappings":"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","sources":["webpack://vsuet-test-page/./src/components/TestTitle/TestTitle.module.css?4e23","components/TestTitle/TestTitle.jsx","webpack://vsuet-test-page/./src/pages/Result/Result.module.css?4aea","webpack://vsuet-test-page/./src/components/ResultsError/ResultsError.module.css?09f3","components/ResultsError/ResultsError.jsx","webpack://vsuet-test-page/./src/components/UI/ResultCounter/ResultCounter.module.css?3f85","components/UI/ResultCounter/ResultCounter.jsx","pages/Result/Result.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"testTitleWrap\":\"TestTitle_testTitleWrap__X3ci-\",\"testName\":\"TestTitle_testName__C5hry\",\"backBtn\":\"TestTitle_backBtn__PpfT9\"};","import { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./TestTitle.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsStarted, clearCurrentTestState } from \"../../store/slices/testSlice\";\r\nimport { memo } from \"react\";\r\n\r\nconst TestTitle = memo(({ testName }) => {\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n\r\n   const handleBackBtnCLick = () => {\r\n      dispatch(setIsStarted(false));\r\n      navigate(\"/\");\r\n   };\r\n\r\n   return (\r\n      <div className={styles.testTitleWrap}>\r\n         <h1 className={styles.testName}>{testName}</h1>\r\n         <button className={styles.backBtn} onClick={handleBackBtnCLick}>\r\n            {\"<\"}\r\n         </button>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default TestTitle;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Result_content__VYwjs\",\"resultInfo\":\"Result_resultInfo__QNDz9\",\"resultText\":\"Result_resultText__wWqOM\",\"link\":\"Result_link__gENhq\"};","// extracted by mini-css-extract-plugin\nexport default {\"emptyResult\":\"ResultsError_emptyResult__TUUY8\",\"content\":\"ResultsError_content__IJ0Ii\",\"title\":\"ResultsError_title__XNlQr\",\"link\":\"ResultsError_link__XhvTd\"};","import React from \"react\";\r\nimport styles from \"./ResultsError.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ResultsError = ({ testId }) => {\r\n   return (\r\n      <div className={[styles.emptyResult, \"wrapper\"].join(\" \")}>\r\n         <div className={styles.content}>\r\n            <h1 className={styles.title}>Вы ещё не прошли этот тест</h1>\r\n               <Link to={`/`} className={styles.link}>\r\n                  Перейти к тесту\r\n               </Link>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ResultsError;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"resultNumber\":\"ResultCounter_resultNumber__RS25I\"};","import { useState, useEffect } from \"react\";\r\nimport styles from \"./ResultCounter.module.css\";\r\n\r\nconst ResultCounter = ({ percentResult }) => {\r\n   const [resultNumber, setResultNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n      const interval = setInterval(() => {\r\n         setResultNumber((prev) => {\r\n            if (prev >= percentResult) {\r\n               clearInterval(interval);\r\n               return prev;\r\n            } else {\r\n               return prev + 1;\r\n            }\r\n         });\r\n      }, 20);\r\n\r\n      return () => clearInterval(interval);\r\n   }, [resultNumber]);\r\n\r\n   return (\r\n      <div className={styles.result}>\r\n         <p className={styles.resultNumber}>\r\n            <span>{resultNumber}</span>\r\n            %\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ResultCounter;\r\n","import { useSelector } from \"react-redux\";\r\nimport styles from \"./Result.module.css\";\r\nimport ResultsError from \"../../components/ResultsError/ResultsError\";\r\nimport TestTitle from \"./../../components/TestTitle/TestTitle\";\r\nimport ResultCounter from \"./../../components/UI/ResultCounter/ResultCounter\";\r\n\r\nconst textResults = [\r\n   \"Возможно, Вы чего-то не знаете или в чём-то не уверены, но у Вас явно есть хорошие шансы успешно пройти обучение и стать классным специалистом!\",\r\n   \"Кажется, Вы интересуетесь сферой информационных технологий или уже имеете некоторый опыт. В таком случае, специальность \\\"Информационные системы и программирование\\\" отлично Вам подойдёт!\",\r\n   \"Вы уверенно чувствуете себя в сфере информационных технологий и, возможно, уже имеете хорошие знания и навыки в этой области. Тогда вам стоит пройти обучение в нашем университете по специальноти \\\"Информационные системы и программирование\\\"! Вы найдёте много единомышленников и сможете прокачать свои навыки.\"\r\n]\r\n\r\nconst Result = () => {\r\n   const test = useSelector((state) => state.test.currentTest);\r\n   const testResults = useSelector((state) => state.test.results).find(\r\n      (result) => result.testId === test.id\r\n   );\r\n\r\n   let percentResult = Math.round((testResults.resultCounter / test.maxResult) * 100);\r\n   let text;\r\n\r\n   if (percentResult <= 35) {\r\n      text = textResults[0];\r\n   } else if (percentResult <= 75) {\r\n      text = textResults[1];\r\n   } else {\r\n      text = textResults[2];\r\n   }\r\n\r\n   if (!testResults) {\r\n      return <ResultsError testId={test.id} />;\r\n   }\r\n\r\n   return (\r\n      <main className={styles.resultPage}>\r\n         <div className={[styles.content, \"wrapper\"].join(\" \")}>\r\n            <TestTitle testName={test.name} />\r\n\r\n            <div className={styles.resultInfo}>\r\n               <ResultCounter\r\n                  percentResult={percentResult}\r\n               />\r\n               <p className={styles.resultText}>\r\n                  {text}\r\n               </p>\r\n               <a className={styles.link} target=\"_blank\" href=\"https://vsuet.ru/abitur/specialties/09-02-07\">\r\n                  Узнать больше\r\n               </a>\r\n            </div>\r\n\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\n\r\nexport default Result;\r\n"],"names":["memo","_ref","testName","navigate","useNavigate","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","onClick","handleBackBtnCLick","setIsStarted","testId","emptyResult","join","content","title","Link","to","link","percentResult","resultNumber","setResultNumber","useState","useEffect","interval","setInterval","prev","clearInterval","result","textResults","Result","test","useSelector","state","currentTest","testResults","results","find","id","text","Math","round","resultCounter","maxResult","resultPage","TestTitle","name","resultInfo","ResultCounter","resultText","target","href","ResultsError"],"sourceRoot":""}