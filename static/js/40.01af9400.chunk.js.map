{"version":3,"file":"static/js/40.01af9400.chunk.js","mappings":"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","sources":["webpack://vsuet-test-page/./src/components/TestTitle/TestTitle.module.css?4e23","components/TestTitle/TestTitle.jsx","webpack://vsuet-test-page/./src/pages/Result/ResultPage.module.css?b5a2","webpack://vsuet-test-page/./src/components/ResultQuestion/ResultQuestion.module.css?3c30","components/ResultQuestion/ResultQuestion.jsx","webpack://vsuet-test-page/./src/components/ResultsError/ResultsError.module.css?09f3","components/ResultsError/ResultsError.jsx","pages/Result/Result.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"testTitleWrap\":\"TestTitle_testTitleWrap__X3ci-\",\"testName\":\"TestTitle_testName__C5hry\",\"backBtn\":\"TestTitle_backBtn__PpfT9\"};","import { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./TestTitle.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setIsStarted, clearCurrentTestState } from \"../../store/slices/testSlice\";\r\n\r\nconst TestTitle = ({ testName }) => {\r\n   const navigate = useNavigate();\r\n   const dispatch = useDispatch();\r\n\r\n   const handleBackBtnCLick = () => {\r\n      dispatch(setIsStarted(false));\r\n      navigate(\"/\");\r\n   };\r\n\r\n   return (\r\n      <div className={styles.testTitleWrap}>\r\n         <h1 className={styles.testName}>{testName}</h1>\r\n         <button className={styles.backBtn} onClick={handleBackBtnCLick}>\r\n            {\"<\"}\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default TestTitle;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ResultPage_content__QR-sj\",\"resultHeader\":\"ResultPage_resultHeader__sKZgy\",\"testName\":\"ResultPage_testName__Qlrm8\",\"resultCounter\":\"ResultPage_resultCounter__DJPzL\"};","// extracted by mini-css-extract-plugin\nexport default {\"question\":\"ResultQuestion_question__wFqMg\",\"questionHeader\":\"ResultQuestion_questionHeader__dHaxS\",\"questionNumber\":\"ResultQuestion_questionNumber__uM31U\",\"falseAnswer\":\"ResultQuestion_falseAnswer__wk-Uu\",\"correctAnswer\":\"ResultQuestion_correctAnswer__6NKQy\",\"questionName\":\"ResultQuestion_questionName__wRTFA\",\"answerWrap\":\"ResultQuestion_answerWrap__cATa3\",\"falseAnswerIcon\":\"ResultQuestion_falseAnswerIcon__9yb4n\",\"userAnswer\":\"ResultQuestion_userAnswer__dLgMi\",\"rightAnswer\":\"ResultQuestion_rightAnswer__6KXRa\"};","import React from \"react\";\r\nimport styles from \"./ResultQuestion.module.css\";\r\n\r\nconst ResultQuestion = ({ question, results, index }) => {\r\n\r\n   console.log(question, results, index)\r\n\r\n   return (\r\n      <li className={styles.question}>\r\n         <header className={styles.questionHeader}>\r\n            <p className={styles.questionNumber}>\r\n               {index + 1}\r\n            </p>\r\n            <p className={styles.questionName}>{question.title}</p>\r\n         </header>\r\n\r\n         <div className={styles.answerWrap}>\r\n            <p className={styles.userAnswer}>\r\n               Ваш ответ:{\" \"}\r\n               {question.answers[results[index].selectedAnswerIndex].title}\r\n            </p>\r\n         </div>\r\n      </li>\r\n   );\r\n};\r\n\r\nexport default ResultQuestion;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ResultsError_content__IJ0Ii\",\"title\":\"ResultsError_title__XNlQr\",\"links\":\"ResultsError_links__CdeL-\",\"link\":\"ResultsError_link__XhvTd\"};","import React from \"react\";\r\nimport styles from \"./ResultsError.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ResultsError = ({ testId }) => {\r\n   return (\r\n      <div className={[styles.content, \"wrapper\"].join(\" \")}>\r\n         <h1 className={styles.title}>Вы ещё не прошли этот тест</h1>\r\n         <div className={styles.links}>\r\n            <Link to={`/tests/${testId}`} className={styles.link}>\r\n               Перейти к тесту\r\n            </Link>\r\n            <Link to=\"/tests\" className={styles.link}>\r\n               На страницу тестов\r\n            </Link>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ResultsError;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styles from \"./ResultPage.module.css\";\r\nimport ResultQuestion from \"../../components/ResultQuestion/ResultQuestion\";\r\nimport ResultsError from \"../../components/ResultsError/ResultsError\";\r\nimport TestTitle from './../../components/TestTitle/TestTitle';\r\n\r\nconst Result = () => {\r\n   const test = useSelector(state => state.test.currentTest)\r\n\r\n   const testResults = useSelector((state) => state.test.results).find(result => result.testId === test.id)\r\n   if (!testResults) {\r\n      return <ResultsError testId={test.id}/>\r\n   }\r\n\r\n   const resultCounter = testResults.resultCounter;\r\n\r\n   return (\r\n      <main className={styles.resultPage}>\r\n         <div className={[styles.content, \"wrapper\"].join(\" \")}>\r\n           <TestTitle testName={test.name}/>\r\n\r\n            <ul className={styles.questions}>\r\n               {test.questions.map((question, i) => (\r\n                  <ResultQuestion\r\n                     key={i}\r\n                     question={question}\r\n                     results={testResults.results}\r\n                     index={i}\r\n                  />\r\n               ))}\r\n            </ul>\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\n\r\nexport default Result;\r\n"],"names":["_ref","testName","navigate","useNavigate","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","onClick","handleBackBtnCLick","setIsStarted","question","results","index","console","log","title","answers","selectedAnswerIndex","testId","content","join","links","Link","to","concat","link","Result","test","useSelector","state","currentTest","testResults","find","result","id","ResultsError","resultCounter","resultPage","TestTitle","name","questions","map","i","ResultQuestion"],"sourceRoot":""}