{"version":3,"file":"static/js/528.d899c2aa.chunk.js","mappings":"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","sources":["webpack://vsuet-test-page/./src/pages/Test/Test.module.css?9afc","webpack://vsuet-test-page/./src/components/Answer/Answer.module.css?de19","components/Answer/Answer.jsx","webpack://vsuet-test-page/./src/components/AnswerList/AnswerList.module.css?cb5c","webpack://vsuet-test-page/./src/components/UI/NextQuestionBtn/NextQuestionBtn.module.css?14d0","components/UI/NextQuestionBtn/NextQuestionBtn.jsx","components/AnswerList/AnswerList.jsx","hooks/useNextQuestion.js","webpack://vsuet-test-page/./src/components/Question/Question.module.css?0626","components/Question/Question.jsx","webpack://vsuet-test-page/./src/components/UI/ProgressLine/ProgressLine.module.css?1fd4","components/UI/ProgressLine/ProgressLine.jsx","data/test.js","webpack://vsuet-test-page/./src/components/Intro/Intro.module.css?4542","webpack://vsuet-test-page/./src/components/UI/Tag/Tag.module.css?d751","components/UI/Tag/Tag.jsx","components/Intro/Intro.jsx","pages/Test/Test.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"testPage\":\"Test_testPage__tDd5f\",\"content\":\"Test_content__+WfVe\",\"testName\":\"Test_testName__YFheP\"};","// extracted by mini-css-extract-plugin\nexport default {\"answer\":\"Answer_answer__zbEsl\",\"answerRadio\":\"Answer_answerRadio__Vl6g0\",\"answerText\":\"Answer_answerText__-8-CZ\"};","import React, { memo } from \"react\";\r\nimport styles from \"./Answer.module.css\";\r\n\r\nconst Answer = memo(({ answer, id, value, setSelectedAnswerIndex }) => {\r\n\r\n   return (\r\n      <div className={styles.answer}>\r\n         <input\r\n            className={styles.answerRadio}\r\n            type=\"radio\"\r\n            id={id}\r\n            name=\"answer\"\r\n            value={value}\r\n            onClick={(e) => setSelectedAnswerIndex(e.target.value)}\r\n         />\r\n         <label\r\n            className={styles.answerText}\r\n            htmlFor={id}\r\n         >\r\n            {answer.title}\r\n         </label>\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default Answer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"controls\":\"AnswerList_controls__hEUML\",\"answersList\":\"AnswerList_answersList__7TDHX\"};","// extracted by mini-css-extract-plugin\nexport default {\"nextQuestionBtn\":\"NextQuestionBtn_nextQuestionBtn__4dRjf\"};","import React from \"react\";\r\nimport styles from './NextQuestionBtn.module.css'\r\nimport RightArrowIcon from \"../icons/RightArrowIcon\";\r\n\r\nconst NextQuestionBtn = ({onNextQuestionClick, selectedAnswerIndex}) => {\r\n   const isAnswerSelected = !selectedAnswerIndex;\r\n   return (\r\n      <button\r\n         type=\"button\"\r\n         className={styles.nextQuestionBtn}\r\n         onClick={onNextQuestionClick}\r\n         disabled={isAnswerSelected}\r\n      >\r\n         ☑️\r\n      </button>\r\n   );\r\n};\r\n\r\nexport default NextQuestionBtn;\r\n","import React  from \"react\";\r\nimport Answer from \"../Answer/Answer\";\r\nimport styles from \"./AnswerList.module.css\";\r\nimport NextQuestionBtn from \"../UI/NextQuestionBtn/NextQuestionBtn\";\r\nimport useNextQuestion from \"./../../hooks/useNextQuestion\";\r\n\r\nconst AnswerList = (props) => {\r\n   const { answers, questionAmount, currentQuestionIndex } = props;\r\n\r\n   const { selectedAnswerIndex, setSelectedAnswerIndex, onNextQuestionClick } =\r\n      useNextQuestion(currentQuestionIndex, questionAmount);\r\n\r\n   return (\r\n      <form className={styles.controls}>\r\n         <div className={styles.answersList}>\r\n            {answers.map((answer, i) => (\r\n               <Answer\r\n                  key={answer + i + currentQuestionIndex}\r\n                  answer={answer}\r\n                  id={i + currentQuestionIndex}\r\n                  value={i}\r\n                  setSelectedAnswerIndex={setSelectedAnswerIndex}\r\n               />\r\n            ))}\r\n         </div>\r\n         <NextQuestionBtn\r\n            onNextQuestionClick={onNextQuestionClick}\r\n            selectedAnswerIndex={selectedAnswerIndex}\r\n         />\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default AnswerList;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n   addToCurrentResult,\r\n   addToResults,\r\n   nextQuestion,\r\n} from \"../store/slices/testSlice\";\r\n\r\nexport default function useNextQuestion(currentQuestionIndex, questionAmount) {\r\n   const dispatch = useDispatch();\r\n   const navigate = useNavigate();\r\n\r\n   const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\r\n\r\n   function onNextQuestionClick() {\r\n      if (currentQuestionIndex >= questionAmount - 1) {\r\n         dispatch(\r\n            addToCurrentResult({ selectedAnswerIndex })\r\n         );\r\n         dispatch(addToResults());\r\n         navigate(`result`);\r\n         return;\r\n      }\r\n\r\n      dispatch(addToCurrentResult({ selectedAnswerIndex }));\r\n      dispatch(nextQuestion({ selectedAnswerIndex }));\r\n      setSelectedAnswerIndex(null);\r\n   }\r\n\r\n   return {\r\n      onNextQuestionClick,\r\n      selectedAnswerIndex,\r\n      setSelectedAnswerIndex,\r\n   };\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"question\":\"Question_question__qITPK\",\"questionTitle\":\"Question_questionTitle__eSxL8\"};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AnswerList from \"../AnswerList/AnswerList\";\r\nimport styles from \"./Question.module.css\";\r\n\r\nconst Question = ({ test }) => {\r\n   const currentQuestionIndex = useSelector(\r\n      (state) => state.test.currentQuestionIndex\r\n   );\r\n\r\n   const currentQuestion = test.questions[currentQuestionIndex];\r\n\r\n   return (\r\n      <section className={styles.question}>\r\n         <h2 className={styles.questionTitle}>{currentQuestion.title}</h2>\r\n\r\n         <AnswerList\r\n            testId={test.id}\r\n            answers={currentQuestion.answers}\r\n            questionAmount={test.questions.length}\r\n            currentQuestionIndex={currentQuestionIndex}\r\n         />\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Question;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"progressWrap\":\"ProgressLine_progressWrap__PYVTQ\",\"progressInfo\":\"ProgressLine_progressInfo__L8zcM\",\"progressLine\":\"ProgressLine_progressLine__-r0OJ\"};","import React from \"react\";\r\nimport styles from \"./ProgressLine.module.css\";\r\n\r\nconst ProgressLine = (props) => {\r\n   const { questionNumber, questionAmount } = props;\r\n\r\n   return (\r\n      <div className={styles.progressWrap}>\r\n         <label className={styles.progressInfo} htmlFor=\"test-progress\">\r\n            <span>{questionNumber}</span>\r\n            <span>/</span>\r\n            <span>{questionAmount} </span>\r\n         </label>\r\n         <progress\r\n            className={styles.progressLine}\r\n            id=\"test-progress\"\r\n            value={questionNumber}\r\n            max={questionAmount}\r\n         />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ProgressLine;\r\n","  export const test = {\r\n      id: 1,\r\n      name: \"Информационные системы и программирование\",\r\n      desc: \"Наш университет предлагает пройти простой тест на Ваши навыки, увлечения и интересы и узнать, подходит ли Вам обучение по специальности #09.02.07:\",\r\n      category: \"Программирование\",\r\n      cover: \"https://images.unsplash.com/photo-1542831371-29b0f74f9713?q=80&w=640&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\r\n      trueResult: 10,\r\n      questions: [\r\n         {\r\n            title: \"Что такое замыкания в JavaScript?\",\r\n            answers: [\r\n               {title: \"Возможность обратиться к переменной до её объявления\", score: 1},\r\n               {title: \"Механизм работы цикла событий\", score: 2},\r\n               {title: \"Способность функции запоминать окружение в котором она объявлена\", score: 5},\r\n            ],\r\n         },\r\n         {\r\n            title: \"React - это...\",\r\n            answers: [\r\n               {title: \"Фреймворк\", score: 1},\r\n               {title: \"Библиотека\", score: 5},\r\n               {title: \"Язык программирования\", score: 0},\r\n            ],\r\n         },\r\n         {\r\n            title: \"Хук useState в React.js - это...\",\r\n            answers: [\r\n               {title: \"Хук для создания состояния\", score: 4},\r\n               {title: \"Хук для создания ref\", score: 2},\r\n            ],\r\n         },\r\n         {\r\n            title: \"Какое правильное написание атрибута класса в JSX?\",\r\n            answers: [\r\n               {title: \"class\", score: 0},\r\n               {title: \"class_name\", score: 2},\r\n               {title: \"className\", score: 4},\r\n            ],\r\n         }\r\n      ]\r\n   }","// extracted by mini-css-extract-plugin\nexport default {\"intro\":\"Intro_intro__NH1ou\",\"content\":\"Intro_content__-fsNO\",\"title\":\"Intro_title__PcH71\",\"desc\":\"Intro_desc__nwzTA\",\"name\":\"Intro_name__OPHcI\",\"tagsWrap\":\"Intro_tagsWrap__0xnUI\",\"tags\":\"Intro_tags__V6vFb\",\"tagsText\":\"Intro_tagsText__o-2EN\",\"startBtn\":\"Intro_startBtn__4VJuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"tag\":\"Tag_tag__umNgY\",\"emoji\":\"Tag_emoji__LTeV3\",\"title\":\"Tag_title__+4HAt\"};","import React from 'react'\r\nimport styles from \"./Tag.module.css\"\r\n\r\nconst Tag = ({emoji, title}) => {\r\n  return (\r\n    <div className={styles.tag}>\r\n      <span className={styles.emoji}>{emoji}</span>\r\n      <p className={styles.title}>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import styles from \"./Intro.module.css\";\r\nimport Tag from \"./../UI/Tag/Tag\";\r\n\r\nconst Intro = ({ desc, setIsStarted }) => {\r\n   return (\r\n      <section className={[styles.intro, \"wrapper\"].join(\" \")}>\r\n         <div className={styles.content}>\r\n            <h1 className={styles.title}>\r\n               Добро пожаловать! 👋\r\n            </h1>\r\n            <p className={styles.desc}>\r\n               {desc}\r\n            </p>\r\n            <p className={styles.name}>\r\n               «Информационные системы и программирование»\r\n            </p>\r\n            <div className={styles.tagsWrap}>\r\n               <div className={styles.tags}>\r\n                  <Tag emoji=\"🖱️\" title=\"Компьютерное моделирование\" />\r\n                  <Tag emoji=\"💻\" title=\"Программирование\" />\r\n                  <Tag emoji=\"⚙️\" title=\"Автоматизация\" />\r\n                  <Tag emoji=\"🔬\" title=\"Системное мышление\" />\r\n               </div>\r\n               <p className={styles.tagsText}>\r\n                  Если Вас интересуют эти навыки и Вы хотите овладеть ими,\r\n                  пройдите тест и убедитесь в правильности своего выбора!\r\n               </p>\r\n            </div>\r\n            <button\r\n               className={styles.startBtn}\r\n               onClick={() => setIsStarted(true)}\r\n            >\r\n               Начать\r\n            </button>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Intro;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Test.module.css\";\r\nimport Question from \"../../components/Question/Question\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProgressLine from \"../../components/UI/ProgressLine/ProgressLine\";\r\nimport {clearCurrentTestState, setCurrentTest} from \"../../store/slices/testSlice\";\r\n\r\nimport { test } from \"../../data/test\";\r\nimport Intro from \"../../components/Intro/Intro\";\r\n\r\nconst Test = () => {\r\n   const dispatch = useDispatch();\r\n\r\n   const [isLoading, setIsLoading] = useState(true);\r\n   const [isStarted, setIsStarded] = useState(false);\r\n   const currentQuestionIndex = useSelector(\r\n      (state) => state.test.currentQuestionIndex\r\n   );\r\n\r\n   useEffect(() => {\r\n      dispatch(clearCurrentTestState())\r\n      dispatch(setCurrentTest(test));\r\n      setIsLoading(false);\r\n   }, [test]);\r\n\r\n   if (!isStarted) return <Intro desc={test.desc} setIsStarted={setIsStarded}/>\r\n\r\n   return (\r\n      isLoading ? (<p>Загрузка...</p>) :\r\n      <main className={styles.testPage}>\r\n         <div className={[styles.content, \"wrapper\"].join(\" \")}>\r\n            <h1 className={styles.testName}>{test.name}</h1>\r\n\r\n            <Question test={test} />\r\n\r\n            <ProgressLine\r\n               questionNumber={currentQuestionIndex + 1}\r\n               questionAmount={test.questions.length}\r\n            />\r\n         </div>\r\n      </main>\r\n   );\r\n};\r\n\r\nexport default Test;\r\n"],"names":["memo","_ref","answer","id","value","setSelectedAnswerIndex","_jsxs","className","styles","children","_jsx","type","name","onClick","e","target","htmlFor","title","onNextQuestionClick","selectedAnswerIndex","isAnswerSelected","disabled","props","answers","questionAmount","currentQuestionIndex","dispatch","useDispatch","navigate","useNavigate","useState","addToCurrentResult","addToResults","nextQuestion","useNextQuestion","map","i","Answer","NextQuestionBtn","test","useSelector","state","currentQuestion","questions","AnswerList","testId","length","questionNumber","max","desc","category","cover","trueResult","score","emoji","setIsStarted","intro","join","content","tagsWrap","tags","Tag","tagsText","startBtn","Test","isLoading","setIsLoading","isStarted","setIsStarded","useEffect","clearCurrentTestState","setCurrentTest","testPage","testName","Question","ProgressLine","Intro"],"sourceRoot":""}